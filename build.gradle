import groovy.xml.MarkupBuilder
import org.jooq.util.GenerationTool

import static javax.xml.bind.JAXB.unmarshal

apply plugin: 'kotlin'
apply plugin: 'org.springframework.boot'
apply plugin: 'net.researchgate.release'
apply plugin: 'org.flywaydb.flyway'


group 'com.sukitsuki.telegram'

repositories {
    mavenCentral()
    jcenter()
}
sourceCompatibility = 1.8
buildscript {
    ext.kotlin_version = '1.1.1'
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        // https://mvnrepository.com/artifact/org.flywaydb/flyway-gradle-plugin
        classpath group: 'org.flywaydb', name: 'flyway-gradle-plugin', version: '4.1.2'
        classpath 'org.jooq:jooq-codegen:3.9.1'
        classpath group: 'postgresql', name: 'postgresql', version: '9.4.1208-jdbc42-atlassian-hosted'
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath 'net.researchgate:gradle-release:2.6.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

flyway {
    url = 'jdbc:postgresql://localhost:5432/game'
    driver = 'org.postgresql.Driver'
    schemas = ['game']
}

dependencies {
    testCompile "junit:junit:4.12"
    compile 'org.jooq:jooq:3.9.1'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-simple
    compile group: 'org.slf4j', name: 'slf4j-simple', version: '1.7.25'
    // https://mvnrepository.com/artifact/com.google.inject/guice
    compile group: 'com.google.inject', name: 'guice', version: '4.1.0'
    // https://mvnrepository.com/artifact/com.zaxxer/HikariCP
    compile group: 'com.zaxxer', name: 'HikariCP', version: '2.6.1'
    // https://mvnrepository.com/artifact/postgresql/postgresql
    compile group: 'postgresql', name: 'postgresql', version: '9.4.1208-jdbc42-atlassian-hosted'
//    compile group: 'com.impossibl.pgjdbc-ng', name: 'pgjdbc-ng', version: '0.7'

    compile 'com.squareup.retrofit2:converter-gson:2.2.0'
    compile 'com.squareup.okhttp3:logging-interceptor:3.6.0'
    compile "com.google.code.gson:gson:2.7"
    compile 'com.julienviet:retrofit-vertx:1.0.1'
    compile "io.vertx:vertx-core:3.4.1"
    compile "org.reflections:reflections:0.9.11"
    compile 'io.github.microutils:kotlin-logging:1.4.4'
    compile 'joda-time:joda-time:2.9.9'
    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.5'
    // https://mvnrepository.com/artifact/com.google.guava/guava
    compile group: 'com.google.guava', name: 'guava', version: '21.0'
    compile 'io.vertx:vertx-web-client:3.4.1'
    compile 'io.vertx:vertx-jdbc-client:3.4.1'
    compile 'io.github.jklingsporn:vertx-jooq:1.0.0'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre8:$kotlin_version"
}


task generate << {
    def writer = new StringWriter()
    def xml = new MarkupBuilder(writer)
            .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.9.0.xsd') {
        jdbc() {
            driver('org.postgresql.Driver')
            url('jdbc:postgresql://localhost:5432/game')
            user("$username")
            password('')
        }
        generator() {
            database() {
                name 'org.jooq.util.postgres.PostgresDatabase'
//                inputSchema 'public'
                includes 'game.*'
                excludes 'game.schema_version'
            }

            // Watch out for this caveat when using MarkupBuilder with "reserved names"
            // - http://stackoverflow.com/a/11389034/521799
            // - https://groups.google.com/forum/#!topic/jooq-user/wi4S9rRxk4A
            generate([:]) {
                pojos true
                daos false
            }
            target() {
                packageName('com.sukitsuki.bot.jooq')
                directory('./src/main/java')
            }
        }
    }
    // Run the code generator
    // ----------------------
    GenerationTool.generate(
            unmarshal(
                    new StringReader(writer.toString()),
                    org.jooq.util.jaxb.Configuration.class
            )
    )
}




task wrapper(type: Wrapper) {
    gradleVersion = '3.4.1'
}
