/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterLocationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CharacterLocation extends TableImpl<CharacterLocationRecord> {

    private static final long serialVersionUID = -1822021847;

    /**
     * The reference instance of <code>game.character_location</code>
     */
    public static final CharacterLocation CHARACTER_LOCATION = new CharacterLocation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterLocationRecord> getRecordType() {
        return CharacterLocationRecord.class;
    }

    /**
     * The column <code>game.character_location.character_location_id</code>.
     */
    public final TableField<CharacterLocationRecord, Integer> CHARACTER_LOCATION_ID = createField("character_location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_location.character_id</code>.
     */
    public final TableField<CharacterLocationRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_location.location_id</code>.
     */
    public final TableField<CharacterLocationRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.character_location</code> table reference
     */
    public CharacterLocation() {
        this("character_location", null);
    }

    /**
     * Create an aliased <code>game.character_location</code> table reference
     */
    public CharacterLocation(String alias) {
        this(alias, CHARACTER_LOCATION);
    }

    private CharacterLocation(String alias, Table<CharacterLocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private CharacterLocation(String alias, Table<CharacterLocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterLocationRecord> getPrimaryKey() {
        return Keys.CHARACTER_LOCATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterLocationRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterLocationRecord>>asList(Keys.CHARACTER_LOCATION_PKEY, Keys.CHARACTER_LOCATION_CHARACTER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterLocationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterLocationRecord, ?>>asList(Keys.CHARACTER_LOCATION__FK_CHARACTER_LOCATION_CHARACTER_ID, Keys.CHARACTER_LOCATION__FK_CHARACTER_LOCATION_LOCATION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CharacterLocation as(String alias) {
        return new CharacterLocation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CharacterLocation rename(String name) {
        return new CharacterLocation(name, null);
    }
}
