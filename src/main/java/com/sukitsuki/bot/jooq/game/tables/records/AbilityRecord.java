/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables.records;


import com.sukitsuki.bot.jooq.game.tables.Ability;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AbilityRecord extends UpdatableRecordImpl<AbilityRecord> implements Record4<Integer, String, Integer, Short> {

    private static final long serialVersionUID = 201264287;

    /**
     * Setter for <code>game.ability.ability_id</code>.
     */
    public void setAbilityId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>game.ability.ability_id</code>.
     */
    public Integer getAbilityId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>game.ability.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>game.ability.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>game.ability.ability_type_id</code>.
     */
    public void setAbilityTypeId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>game.ability.ability_type_id</code>.
     */
    public Integer getAbilityTypeId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>game.ability.required_level</code>.
     */
    public void setRequiredLevel(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>game.ability.required_level</code>.
     */
    public Short getRequiredLevel() {
        return (Short) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row4<Integer, String, Integer, Short> valuesRow() {
        return (Row4) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Ability.ABILITY.ABILITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Ability.ABILITY.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return Ability.ABILITY.ABILITY_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Short> field4() {
        return Ability.ABILITY.REQUIRED_LEVEL;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAbilityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAbilityTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Short value4() {
        return getRequiredLevel();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbilityRecord value1(Integer value) {
        setAbilityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbilityRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbilityRecord value3(Integer value) {
        setAbilityTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbilityRecord value4(Short value) {
        setRequiredLevel(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AbilityRecord values(Integer value1, String value2, Integer value3, Short value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AbilityRecord
     */
    public AbilityRecord() {
        super(Ability.ABILITY);
    }

    /**
     * Create a detached, initialised AbilityRecord
     */
    public AbilityRecord(Integer abilityId, String name, Integer abilityTypeId, Short requiredLevel) {
        super(Ability.ABILITY);

        set(0, abilityId);
        set(1, name);
        set(2, abilityTypeId);
        set(3, requiredLevel);
    }
}
