/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables.records;


import com.sukitsuki.bot.jooq.game.tables.ClassAbility;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ClassAbilityRecord extends UpdatableRecordImpl<ClassAbilityRecord> implements Record3<Integer, Integer, Integer> {

    private static final long serialVersionUID = 2001947157;

    /**
     * Setter for <code>game.class_ability.class_ability_id</code>.
     */
    public void setClassAbilityId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>game.class_ability.class_ability_id</code>.
     */
    public Integer getClassAbilityId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>game.class_ability.class_id</code>.
     */
    public void setClassId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>game.class_ability.class_id</code>.
     */
    public Integer getClassId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>game.class_ability.ability_id</code>.
     */
    public void setAbilityId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>game.class_ability.ability_id</code>.
     */
    public Integer getAbilityId() {
        return (Integer) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, Integer, Integer> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return ClassAbility.CLASS_ABILITY.CLASS_ABILITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field2() {
        return ClassAbility.CLASS_ABILITY.CLASS_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field3() {
        return ClassAbility.CLASS_ABILITY.ABILITY_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getClassAbilityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value2() {
        return getClassId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value3() {
        return getAbilityId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassAbilityRecord value1(Integer value) {
        setClassAbilityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassAbilityRecord value2(Integer value) {
        setClassId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassAbilityRecord value3(Integer value) {
        setAbilityId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ClassAbilityRecord values(Integer value1, Integer value2, Integer value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ClassAbilityRecord
     */
    public ClassAbilityRecord() {
        super(ClassAbility.CLASS_ABILITY);
    }

    /**
     * Create a detached, initialised ClassAbilityRecord
     */
    public ClassAbilityRecord(Integer classAbilityId, Integer classId, Integer abilityId) {
        super(ClassAbility.CLASS_ABILITY);

        set(0, classAbilityId);
        set(1, classId);
        set(2, abilityId);
    }
}
