/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Character extends TableImpl<CharacterRecord> {

    private static final long serialVersionUID = 170614999;

    /**
     * The reference instance of <code>game.character</code>
     */
    public static final Character CHARACTER = new Character();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterRecord> getRecordType() {
        return CharacterRecord.class;
    }

    /**
     * The column <code>game.character.character_id</code>.
     */
    public final TableField<CharacterRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character.character_type_id</code>.
     */
    public final TableField<CharacterRecord, Integer> CHARACTER_TYPE_ID = createField("character_type_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character.name</code>.
     */
    public final TableField<CharacterRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR.length(510).nullable(false), this, "");

    /**
     * The column <code>game.character.alive</code>.
     */
    public final TableField<CharacterRecord, Boolean> ALIVE = createField("alive", org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), this, "");

    /**
     * The column <code>game.character.level</code>.
     */
    public final TableField<CharacterRecord, Short> LEVEL = createField("level", org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * The column <code>game.character.xp</code>.
     */
    public final TableField<CharacterRecord, Long> XP = createField("xp", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>game.character.money</code>.
     */
    public final TableField<CharacterRecord, Long> MONEY = createField("money", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>game.character</code> table reference
     */
    public Character() {
        this("character", null);
    }

    /**
     * Create an aliased <code>game.character</code> table reference
     */
    public Character(String alias) {
        this(alias, CHARACTER);
    }

    private Character(String alias, Table<CharacterRecord> aliased) {
        this(alias, aliased, null);
    }

    private Character(String alias, Table<CharacterRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterRecord> getPrimaryKey() {
        return Keys.CHARACTER_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterRecord>>asList(Keys.CHARACTER_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterRecord, ?>>asList(Keys.CHARACTER__FK_CHARACTER_CHARACTER_TYPE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Character as(String alias) {
        return new Character(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Character rename(String name) {
        return new Character(name, null);
    }
}
