/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables.records;


import com.sukitsuki.bot.jooq.game.tables.Attribute;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AttributeRecord extends UpdatableRecordImpl<AttributeRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = -1381739953;

    /**
     * Setter for <code>game.attribute.attribute_id</code>.
     */
    public void setAttributeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>game.attribute.attribute_id</code>.
     */
    public Integer getAttributeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>game.attribute.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>game.attribute.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>game.attribute.desc</code>.
     */
    public void setDesc(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>game.attribute.desc</code>.
     */
    public String getDesc() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return Attribute.ATTRIBUTE.ATTRIBUTE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Attribute.ATTRIBUTE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return Attribute.ATTRIBUTE.DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getAttributeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttributeRecord value1(Integer value) {
        setAttributeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttributeRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttributeRecord value3(String value) {
        setDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AttributeRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached AttributeRecord
     */
    public AttributeRecord() {
        super(Attribute.ATTRIBUTE);
    }

    /**
     * Create a detached, initialised AttributeRecord
     */
    public AttributeRecord(Integer attributeId, String name, String desc) {
        super(Attribute.ATTRIBUTE);

        set(0, attributeId);
        set(1, name);
        set(2, desc);
    }
}
