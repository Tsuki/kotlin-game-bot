/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.ItemAttributeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ItemAttribute extends TableImpl<ItemAttributeRecord> {

    private static final long serialVersionUID = 412997800;

    /**
     * The reference instance of <code>game.item_attribute</code>
     */
    public static final ItemAttribute ITEM_ATTRIBUTE = new ItemAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ItemAttributeRecord> getRecordType() {
        return ItemAttributeRecord.class;
    }

    /**
     * The column <code>game.item_attribute.item_attribute_id</code>.
     */
    public final TableField<ItemAttributeRecord, Integer> ITEM_ATTRIBUTE_ID = createField("item_attribute_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.item_attribute.item_id</code>.
     */
    public final TableField<ItemAttributeRecord, Integer> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.item_attribute.attribute_id</code>.
     */
    public final TableField<ItemAttributeRecord, Integer> ATTRIBUTE_ID = createField("attribute_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.item_attribute.value</code>.
     */
    public final TableField<ItemAttributeRecord, Long> VALUE = createField("value", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>game.item_attribute</code> table reference
     */
    public ItemAttribute() {
        this("item_attribute", null);
    }

    /**
     * Create an aliased <code>game.item_attribute</code> table reference
     */
    public ItemAttribute(String alias) {
        this(alias, ITEM_ATTRIBUTE);
    }

    private ItemAttribute(String alias, Table<ItemAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private ItemAttribute(String alias, Table<ItemAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ItemAttributeRecord> getPrimaryKey() {
        return Keys.ITEM_ATTRIBUTE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ItemAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<ItemAttributeRecord>>asList(Keys.ITEM_ATTRIBUTE_PKEY, Keys.ITEM_ATTRIBUTE_ITEM_ID_ATTRIBUTE_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<ItemAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<ItemAttributeRecord, ?>>asList(Keys.ITEM_ATTRIBUTE__FK_ITEM_ATTRIBUTE_ITEM_ID, Keys.ITEM_ATTRIBUTE__FK_ITEM_ATTRIBUTE_ATTRIBUTE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ItemAttribute as(String alias) {
        return new ItemAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public ItemAttribute rename(String name) {
        return new ItemAttribute(name, null);
    }
}
