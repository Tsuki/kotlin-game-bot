/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.EntityClassRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityClass extends TableImpl<EntityClassRecord> {

    private static final long serialVersionUID = 1923255571;

    /**
     * The reference instance of <code>game.entity_class</code>
     */
    public static final EntityClass ENTITY_CLASS = new EntityClass();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityClassRecord> getRecordType() {
        return EntityClassRecord.class;
    }

    /**
     * The column <code>game.entity_class.entity_class_id</code>.
     */
    public final TableField<EntityClassRecord, Integer> ENTITY_CLASS_ID = createField("entity_class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.entity_class.entity_id</code>.
     */
    public final TableField<EntityClassRecord, Integer> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.entity_class.class_id</code>.
     */
    public final TableField<EntityClassRecord, Integer> CLASS_ID = createField("class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.entity_class</code> table reference
     */
    public EntityClass() {
        this("entity_class", null);
    }

    /**
     * Create an aliased <code>game.entity_class</code> table reference
     */
    public EntityClass(String alias) {
        this(alias, ENTITY_CLASS);
    }

    private EntityClass(String alias, Table<EntityClassRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityClass(String alias, Table<EntityClassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityClassRecord> getPrimaryKey() {
        return Keys.ENTITY_CLASS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityClassRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityClassRecord>>asList(Keys.ENTITY_CLASS_PKEY, Keys.ENTITY_CLASS_ENTITY_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EntityClassRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EntityClassRecord, ?>>asList(Keys.ENTITY_CLASS__FK_ENTITY_CLASS_ENTITY_ID, Keys.ENTITY_CLASS__FK_ENTITY_CLASS_CLASS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityClass as(String alias) {
        return new EntityClass(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityClass rename(String name) {
        return new EntityClass(name, null);
    }
}
