/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.EntityFactionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EntityFaction extends TableImpl<EntityFactionRecord> {

    private static final long serialVersionUID = 1124189343;

    /**
     * The reference instance of <code>game.entity_faction</code>
     */
    public static final EntityFaction ENTITY_FACTION = new EntityFaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<EntityFactionRecord> getRecordType() {
        return EntityFactionRecord.class;
    }

    /**
     * The column <code>game.entity_faction.entity_faction_id</code>.
     */
    public final TableField<EntityFactionRecord, Integer> ENTITY_FACTION_ID = createField("entity_faction_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.entity_faction.entity_id</code>.
     */
    public final TableField<EntityFactionRecord, Integer> ENTITY_ID = createField("entity_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.entity_faction.faction_id</code>.
     */
    public final TableField<EntityFactionRecord, Integer> FACTION_ID = createField("faction_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.entity_faction</code> table reference
     */
    public EntityFaction() {
        this("entity_faction", null);
    }

    /**
     * Create an aliased <code>game.entity_faction</code> table reference
     */
    public EntityFaction(String alias) {
        this(alias, ENTITY_FACTION);
    }

    private EntityFaction(String alias, Table<EntityFactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private EntityFaction(String alias, Table<EntityFactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<EntityFactionRecord> getPrimaryKey() {
        return Keys.ENTITY_FACTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<EntityFactionRecord>> getKeys() {
        return Arrays.<UniqueKey<EntityFactionRecord>>asList(Keys.ENTITY_FACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<EntityFactionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<EntityFactionRecord, ?>>asList(Keys.ENTITY_FACTION__FK_ENTITY_FACTION_ENTITY_ID, Keys.ENTITY_FACTION__FK_ENTITY_FACTION_FACTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EntityFaction as(String alias) {
        return new EntityFaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public EntityFaction rename(String name) {
        return new EntityFaction(name, null);
    }
}
