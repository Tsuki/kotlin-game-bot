/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterPartyRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CharacterParty extends TableImpl<CharacterPartyRecord> {

    private static final long serialVersionUID = 409452128;

    /**
     * The reference instance of <code>game.character_party</code>
     */
    public static final CharacterParty CHARACTER_PARTY = new CharacterParty();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterPartyRecord> getRecordType() {
        return CharacterPartyRecord.class;
    }

    /**
     * The column <code>game.character_party.character_party_id</code>.
     */
    public final TableField<CharacterPartyRecord, Integer> CHARACTER_PARTY_ID = createField("character_party_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_party.character_id</code>.
     */
    public final TableField<CharacterPartyRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_party.party_id</code>.
     */
    public final TableField<CharacterPartyRecord, Integer> PARTY_ID = createField("party_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_party.party_leader</code>.
     */
    public final TableField<CharacterPartyRecord, Boolean> PARTY_LEADER = createField("party_leader", org.jooq.impl.SQLDataType.BOOLEAN, this, "");

    /**
     * Create a <code>game.character_party</code> table reference
     */
    public CharacterParty() {
        this("character_party", null);
    }

    /**
     * Create an aliased <code>game.character_party</code> table reference
     */
    public CharacterParty(String alias) {
        this(alias, CHARACTER_PARTY);
    }

    private CharacterParty(String alias, Table<CharacterPartyRecord> aliased) {
        this(alias, aliased, null);
    }

    private CharacterParty(String alias, Table<CharacterPartyRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterPartyRecord> getPrimaryKey() {
        return Keys.CHARACTER_PARTY_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterPartyRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterPartyRecord>>asList(Keys.CHARACTER_PARTY_PKEY, Keys.CHARACTER_PARTY_CHARACTER_ID_KEY, Keys.CHARACTER_PARTY_PARTY_ID_PARTY_LEADER_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterPartyRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterPartyRecord, ?>>asList(Keys.CHARACTER_PARTY__FK_CHARACTER_PARTY_CHARACTER_ID, Keys.CHARACTER_PARTY__FK_CHARACTER_PARTY_PARTY_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CharacterParty as(String alias) {
        return new CharacterParty(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CharacterParty rename(String name) {
        return new CharacterParty(name, null);
    }
}
