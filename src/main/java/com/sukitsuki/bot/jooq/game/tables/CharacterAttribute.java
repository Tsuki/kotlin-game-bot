/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterAttributeRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CharacterAttribute extends TableImpl<CharacterAttributeRecord> {

    private static final long serialVersionUID = -1174260124;

    /**
     * The reference instance of <code>game.character_attribute</code>
     */
    public static final CharacterAttribute CHARACTER_ATTRIBUTE = new CharacterAttribute();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterAttributeRecord> getRecordType() {
        return CharacterAttributeRecord.class;
    }

    /**
     * The column <code>game.character_attribute.character_attribute_id</code>.
     */
    public final TableField<CharacterAttributeRecord, Integer> CHARACTER_ATTRIBUTE_ID = createField("character_attribute_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_attribute.character_id</code>.
     */
    public final TableField<CharacterAttributeRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_attribute.attribute_id</code>.
     */
    public final TableField<CharacterAttributeRecord, Integer> ATTRIBUTE_ID = createField("attribute_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_attribute.value</code>.
     */
    public final TableField<CharacterAttributeRecord, Long> VALUE = createField("value", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * Create a <code>game.character_attribute</code> table reference
     */
    public CharacterAttribute() {
        this("character_attribute", null);
    }

    /**
     * Create an aliased <code>game.character_attribute</code> table reference
     */
    public CharacterAttribute(String alias) {
        this(alias, CHARACTER_ATTRIBUTE);
    }

    private CharacterAttribute(String alias, Table<CharacterAttributeRecord> aliased) {
        this(alias, aliased, null);
    }

    private CharacterAttribute(String alias, Table<CharacterAttributeRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterAttributeRecord> getPrimaryKey() {
        return Keys.CHARACTER_ATTRIBUTE_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterAttributeRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterAttributeRecord>>asList(Keys.CHARACTER_ATTRIBUTE_PKEY, Keys.CHARACTER_ATTRIBUTE_CHARACTER_ID_ATTRIBUTE_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterAttributeRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterAttributeRecord, ?>>asList(Keys.CHARACTER_ATTRIBUTE__FK_CHARACTER_ATTRIBUTE_CHARACTER_ID, Keys.CHARACTER_ATTRIBUTE__FK_CHARACTER_ATTRIBUTE_ATTRIBUTE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CharacterAttribute as(String alias) {
        return new CharacterAttribute(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CharacterAttribute rename(String name) {
        return new CharacterAttribute(name, null);
    }
}
