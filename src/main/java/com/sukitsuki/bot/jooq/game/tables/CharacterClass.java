/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterClassRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CharacterClass extends TableImpl<CharacterClassRecord> {

    private static final long serialVersionUID = -926020057;

    /**
     * The reference instance of <code>game.character_class</code>
     */
    public static final CharacterClass CHARACTER_CLASS = new CharacterClass();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterClassRecord> getRecordType() {
        return CharacterClassRecord.class;
    }

    /**
     * The column <code>game.character_class.character_class_id</code>.
     */
    public final TableField<CharacterClassRecord, Integer> CHARACTER_CLASS_ID = createField("character_class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_class.character_id</code>.
     */
    public final TableField<CharacterClassRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_class.class_id</code>.
     */
    public final TableField<CharacterClassRecord, Integer> CLASS_ID = createField("class_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.character_class</code> table reference
     */
    public CharacterClass() {
        this("character_class", null);
    }

    /**
     * Create an aliased <code>game.character_class</code> table reference
     */
    public CharacterClass(String alias) {
        this(alias, CHARACTER_CLASS);
    }

    private CharacterClass(String alias, Table<CharacterClassRecord> aliased) {
        this(alias, aliased, null);
    }

    private CharacterClass(String alias, Table<CharacterClassRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterClassRecord> getPrimaryKey() {
        return Keys.CHARACTER_CLASS_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterClassRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterClassRecord>>asList(Keys.CHARACTER_CLASS_PKEY, Keys.CHARACTER_CLASS_CHARACTER_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterClassRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterClassRecord, ?>>asList(Keys.CHARACTER_CLASS__FK_CHARACTER_CLASS_CHARACTER_ID, Keys.CHARACTER_CLASS__FK_CHARACTER_CLASS_CLASS_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CharacterClass as(String alias) {
        return new CharacterClass(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CharacterClass rename(String name) {
        return new CharacterClass(name, null);
    }
}
