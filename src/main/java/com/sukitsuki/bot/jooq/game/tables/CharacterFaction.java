/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterFactionRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CharacterFaction extends TableImpl<CharacterFactionRecord> {

    private static final long serialVersionUID = 505319085;

    /**
     * The reference instance of <code>game.character_faction</code>
     */
    public static final CharacterFaction CHARACTER_FACTION = new CharacterFaction();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterFactionRecord> getRecordType() {
        return CharacterFactionRecord.class;
    }

    /**
     * The column <code>game.character_faction.character_faction_id</code>.
     */
    public final TableField<CharacterFactionRecord, Integer> CHARACTER_FACTION_ID = createField("character_faction_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_faction.character_id</code>.
     */
    public final TableField<CharacterFactionRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_faction.faction_id</code>.
     */
    public final TableField<CharacterFactionRecord, Integer> FACTION_ID = createField("faction_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.character_faction</code> table reference
     */
    public CharacterFaction() {
        this("character_faction", null);
    }

    /**
     * Create an aliased <code>game.character_faction</code> table reference
     */
    public CharacterFaction(String alias) {
        this(alias, CHARACTER_FACTION);
    }

    private CharacterFaction(String alias, Table<CharacterFactionRecord> aliased) {
        this(alias, aliased, null);
    }

    private CharacterFaction(String alias, Table<CharacterFactionRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterFactionRecord> getPrimaryKey() {
        return Keys.CHARACTER_FACTION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterFactionRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterFactionRecord>>asList(Keys.CHARACTER_FACTION_PKEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterFactionRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterFactionRecord, ?>>asList(Keys.CHARACTER_FACTION__FK_CHARACTER_FACTION_CHARACTER_ID, Keys.CHARACTER_FACTION__FK_CHARACTER_FACTION_FACTION_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CharacterFaction as(String alias) {
        return new CharacterFaction(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CharacterFaction rename(String name) {
        return new CharacterFaction(name, null);
    }
}
