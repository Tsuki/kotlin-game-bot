/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.CharacterItemRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CharacterItem extends TableImpl<CharacterItemRecord> {

    private static final long serialVersionUID = 297392429;

    /**
     * The reference instance of <code>game.character_item</code>
     */
    public static final CharacterItem CHARACTER_ITEM = new CharacterItem();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<CharacterItemRecord> getRecordType() {
        return CharacterItemRecord.class;
    }

    /**
     * The column <code>game.character_item.character_item_id</code>.
     */
    public final TableField<CharacterItemRecord, Integer> CHARACTER_ITEM_ID = createField("character_item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_item.character_id</code>.
     */
    public final TableField<CharacterItemRecord, Integer> CHARACTER_ID = createField("character_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.character_item.item_id</code>.
     */
    public final TableField<CharacterItemRecord, Integer> ITEM_ID = createField("item_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.character_item</code> table reference
     */
    public CharacterItem() {
        this("character_item", null);
    }

    /**
     * Create an aliased <code>game.character_item</code> table reference
     */
    public CharacterItem(String alias) {
        this(alias, CHARACTER_ITEM);
    }

    private CharacterItem(String alias, Table<CharacterItemRecord> aliased) {
        this(alias, aliased, null);
    }

    private CharacterItem(String alias, Table<CharacterItemRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<CharacterItemRecord> getPrimaryKey() {
        return Keys.CHARACTER_ITEM_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<CharacterItemRecord>> getKeys() {
        return Arrays.<UniqueKey<CharacterItemRecord>>asList(Keys.CHARACTER_ITEM_PKEY, Keys.CHARACTER_ITEM_CHARACTER_ID_ITEM_ID_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<CharacterItemRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<CharacterItemRecord, ?>>asList(Keys.CHARACTER_ITEM__FK_CHARACTER_ITEM_CHARACTER_ID, Keys.CHARACTER_ITEM__FK_CHARACTER_ITEM_ITEM_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public CharacterItem as(String alias) {
        return new CharacterItem(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public CharacterItem rename(String name) {
        return new CharacterItem(name, null);
    }
}
