/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables.records;


import com.sukitsuki.bot.jooq.game.tables.EffectType;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EffectTypeRecord extends UpdatableRecordImpl<EffectTypeRecord> implements Record3<Integer, String, String> {

    private static final long serialVersionUID = -407482947;

    /**
     * Setter for <code>game.effect_type.effect_type_id</code>.
     */
    public void setEffectTypeId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>game.effect_type.effect_type_id</code>.
     */
    public Integer getEffectTypeId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>game.effect_type.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>game.effect_type.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>game.effect_type.desc</code>.
     */
    public void setDesc(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>game.effect_type.desc</code>.
     */
    public String getDesc() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row3<Integer, String, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<Integer> field1() {
        return EffectType.EFFECT_TYPE.EFFECT_TYPE_ID;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return EffectType.EFFECT_TYPE.NAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field3() {
        return EffectType.EFFECT_TYPE.DESC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Integer value1() {
        return getEffectTypeId();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getName();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value3() {
        return getDesc();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EffectTypeRecord value1(Integer value) {
        setEffectTypeId(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EffectTypeRecord value2(String value) {
        setName(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EffectTypeRecord value3(String value) {
        setDesc(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public EffectTypeRecord values(Integer value1, String value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached EffectTypeRecord
     */
    public EffectTypeRecord() {
        super(EffectType.EFFECT_TYPE);
    }

    /**
     * Create a detached, initialised EffectTypeRecord
     */
    public EffectTypeRecord(Integer effectTypeId, String name, String desc) {
        super(EffectType.EFFECT_TYPE);

        set(0, effectTypeId);
        set(1, name);
        set(2, desc);
    }
}
