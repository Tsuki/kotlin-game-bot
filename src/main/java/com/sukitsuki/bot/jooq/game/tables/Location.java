/*
 * This file is generated by jOOQ.
*/
package com.sukitsuki.bot.jooq.game.tables;


import com.sukitsuki.bot.jooq.game.Game;
import com.sukitsuki.bot.jooq.game.Keys;
import com.sukitsuki.bot.jooq.game.tables.records.LocationRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.1"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Location extends TableImpl<LocationRecord> {

    private static final long serialVersionUID = -2047089316;

    /**
     * The reference instance of <code>game.location</code>
     */
    public static final Location LOCATION = new Location();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<LocationRecord> getRecordType() {
        return LocationRecord.class;
    }

    /**
     * The column <code>game.location.location_id</code>.
     */
    public final TableField<LocationRecord, Integer> LOCATION_ID = createField("location_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>game.location.x</code>.
     */
    public final TableField<LocationRecord, Long> X = createField("x", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>game.location.y</code>.
     */
    public final TableField<LocationRecord, Long> Y = createField("y", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "");

    /**
     * The column <code>game.location.place_id</code>.
     */
    public final TableField<LocationRecord, Integer> PLACE_ID = createField("place_id", org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>game.location</code> table reference
     */
    public Location() {
        this("location", null);
    }

    /**
     * Create an aliased <code>game.location</code> table reference
     */
    public Location(String alias) {
        this(alias, LOCATION);
    }

    private Location(String alias, Table<LocationRecord> aliased) {
        this(alias, aliased, null);
    }

    private Location(String alias, Table<LocationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Game.GAME;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<LocationRecord> getPrimaryKey() {
        return Keys.LOCATION_PKEY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<LocationRecord>> getKeys() {
        return Arrays.<UniqueKey<LocationRecord>>asList(Keys.LOCATION_PKEY, Keys.LOCATION_X_Y_KEY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<LocationRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<LocationRecord, ?>>asList(Keys.LOCATION__FK_LOCATION_PLACE_ID);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Location as(String alias) {
        return new Location(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Location rename(String name) {
        return new Location(name, null);
    }
}
